// <auto-generated />
using System;
using InvyNest_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InvyNest_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250817072636_AddHolderAndLocationToWorkspaceItem")]
    partial class AddHolderAndLocationToWorkspaceItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvyNest_API.Controllers.BomRow", b =>
                {
                    b.Property<int>("ChildCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("ChildItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("ChildName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Depth")
                        .HasColumnType("integer");

                    b.Property<Guid>("ParentItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("ParentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("InvyNest_API.Domain.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("InvyNest_API.Domain.ItemComponent", b =>
                {
                    b.Property<Guid>("ParentItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChildItemId")
                        .HasColumnType("uuid");

                    b.Property<int>("ChildCount")
                        .HasColumnType("integer");

                    b.HasKey("ParentItemId", "ChildItemId");

                    b.HasIndex("ChildItemId");

                    b.ToTable("ItemComponents", t =>
                        {
                            t.HasCheckConstraint("ck_item_components_count_positive", "\"ChildCount\" > 0");

                            t.HasCheckConstraint("ck_item_components_no_self", "\"ParentItemId\" <> \"ChildItemId\"");
                        });
                });

            modelBuilder.Entity("InvyNest_API.Domain.Workspace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("OwnerEmail")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.HasKey("Id");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("InvyNest_API.Domain.WorkspaceItem", b =>
                {
                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("Holder")
                        .HasColumnType("text");

                    b.Property<string>("LocationNote")
                        .HasColumnType("text");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("WorkspaceId", "ItemId");

                    b.HasIndex("Holder");

                    b.HasIndex("ItemId");

                    b.HasIndex("LocationNote");

                    b.ToTable("WorkspaceItems");
                });

            modelBuilder.Entity("InvyNest_API.Domain.ItemComponent", b =>
                {
                    b.HasOne("InvyNest_API.Domain.Item", "ChildItem")
                        .WithMany("PartOf")
                        .HasForeignKey("ChildItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvyNest_API.Domain.Item", "ParentItem")
                        .WithMany("Components")
                        .HasForeignKey("ParentItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChildItem");

                    b.Navigation("ParentItem");
                });

            modelBuilder.Entity("InvyNest_API.Domain.WorkspaceItem", b =>
                {
                    b.HasOne("InvyNest_API.Domain.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvyNest_API.Domain.Workspace", "Workspace")
                        .WithMany("Items")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("InvyNest_API.Domain.Item", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("PartOf");
                });

            modelBuilder.Entity("InvyNest_API.Domain.Workspace", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
